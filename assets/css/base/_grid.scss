/// The Grid

.wrapper {
  width: 100%;
  max-width: $site-max-width;
  margin-left:  auto;
  margin-right: auto;
  padding-left:  $gutter;
  padding-right: $gutter;
  overflow: hidden;

  @include respond-to(med) {
    padding-left:  $gutter*2;
    padding-right: $gutter*2;
  }

  @include respond-to-max(sml) {
    width: 90%;
  }
}
body.full-width .wrapper {
  max-width: none;
}
.row {
  margin-left:  -$gutter;
  margin-right: -$gutter;
  overflow: hidden;
}
.row:before, .row:after {
  content: '';
  display: table;
}
.tuck-bottom {
  margin-bottom: 0;
}
// USE SPARINGLY!
.wrapper.with-overflow,
.wrapper.with-overflow > .row {
  overflow: visible;
}

// Grid > Columns all widths
@for $i from 1 through 12 {
  .sml-c#{$i},
  .med-c#{$i},
  .lrg-c#{$i} {
    position: relative;
    padding-left:  $gutter;
    padding-right: $gutter;
    min-height: 1px;
  }
}
@for $i from 1 through 11 {
  .sml-c#{$i},
  .med-c#{$i},
  .lrg-c#{$i} {
    float: left;
  }
}

// Grid > Small+ columns
@for $i from 1 through 11 {
  .sml-c#{$i} {
    width: 8.3333333333% * $i;
  }
}
@for $i from 0 through 11 {
  .sml-s#{$i} {
    margin-left: 8.3333333333% * $i;
  }
}
.sml-c12 {
  width: 100%;
}
.sml-no-pad {
  padding-left:  0;
  padding-right: 0;
}

// Grid > Medium+ Columns
@include respond-to(med) {
  @for $i from 1 through 11 {
    .med-c#{$i} {
      width: 8.3333333333% * $i;
    }
  }
  @for $i from 1 through 11 {
    .med-s#{$i} {
      margin-left: 8.3333333333% * $i;
    }
  }
  .med-c12 {
    width: 100%;
  }
  .med-no-pad {
    padding-left:  0;
    padding-right: 0;
  }
}

// Grid > Large+ Columns
@include respond-to(lrg) {
  @for $i from 1 through 11 {
    .lrg-c#{$i} {
      width: 8.3333333333% * $i;
    }
  }
  @for $i from 0 through 11 {
    .lrg-s#{$i} {
      margin-left: 8.3333333333% * $i;
    }
  }
  .lrg-c12 {
    width: 100%;
  }
  .lrg-no-pad {
    padding-left:  0;
    padding-right: 0;
  }
}

// Grid > Modifiers
.grid-center {
  margin-left:  auto;
  margin-right: auto;
  float: none;
}
.sml-pull-right {
  float: right;
}
.med-pull-right {
  @include respond-to(med) {
    float: right;
  }
}
.lrg-pull-right {
  @include respond-to(lrg) {
    float: right;
  }
}

// Flexbox Grid

.flex-grid {
  display: flex;
}
.flex-grid > * {
  flex: 1;
}
.flex-center {
  align-items: center;
  justify-content: center;
  height: 100%;
}
.sml-flex-col {
  flex-direction: column;
}

@mixin flex-row($content) {
  @include respond-to($content) {
    .#{$content}-flex-row {
      flex-direction: row;
      flex-flow: row wrap;
      justify-content: center;
    }
    .#{$content}-flex-row > * {
      margin-right: $gutter;
      min-width: 0;
    }
    .#{$content}-flex-row > *:last-child {
      margin-right: 0;
    }
    @for $i from 1 through 4 {
      .#{$content}-flex-#{$i} {
        flex: $i;
      }
    }
  }
}
@include flex-row(sml)
@include flex-row(med)
@include flex-row(lrg)

.flex-fixed-height {
  flex-grow: 0;
}

// Visibility

.sml-hide {
  @include respond-to(sml) {
    display: none;
  }
}
.med-hide {
  @include respond-to(med) {
    display: none;
  }
}
.lrg-hide {
  @include respond-to(lrg) {
    display: none;
  }
}
.med-show {
  @include respond-to(med) {
    display: block;
  }
}
.lrg-show {
  @include respond-to(lrg) {
    display: block;
  }
}
